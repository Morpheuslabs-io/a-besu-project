---
- name: Init besu
  debug:
    msg: "Init Besu"

- name: Get public ip
  shell: dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null || curl -s --retry 2 icanhazip.com
  register: node_ip

- name: create besu directories
  file:
    path: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { dest: "/opt/besu-validator/data/keystore", mode: "0440" }
    - { dest: "/opt/besu-validator/logs", mode: "0440" }
    - { dest: "/opt/besu-validator/tmp", mode: "0440" }

- name: Copy permissioned nodes file
  copy:
    src: "{{ role_path }}/files/permissions_config.toml"
    dest: /opt/besu-validator/tmp/permissions_config.toml
    mode: 0755
  when: validator|bool

#- name: Copy password to file
#  copy:
#    dest: "/opt/besu-validator/tmp/.account_pass"
#    content: |
#      {{password}}
#  when: first_node

- name: initializing pantheon from genesis.json
  debug:
    msg: Initializing Pantheon

- name: Copy genesis ibft2.0 file
  copy:
    src: "{{ role_path }}/files/genesis.json"
    dest: /opt/besu-validator/data/genesis.json
    mode: 0755

- name: Copy node key to first validator node
  copy:
    src: "{{ role_path }}/files/key"
    dest: /opt/besu-validator/data/key
    mode: 0700
  when: first_node|bool

- name: Generate node key
  shell: pantheon --data-path=/opt/besu-validator/data public-key export-address --to=/opt/besu-validator/data/nodeAddress | grep -oE "0x[A-Fa-f0-9]*" | sed 's/0x//'
  register: enode_key

- name: print enode key
  debug:
    msg: enode://{{enode_key.stdout}}@{{node_ip.stdout}}:60606

- name: update permissioned nodes validator file
  replace:
    dest: /opt/besu-validator/tmp/permissions_config.toml
    regexp: ':60606"]$'
    replace: ':60606",]'
  when: validator|bool

- name: add new permissioned nodes validator
  replace:
    dest: /opt/besu-validator/tmp/permissions_config.toml
    regexp: ",]$"
    replace: ',"enode://{{enode_key.stdout}}@{{node_ip.stdout}}:60606"]'
  when: validator|bool

- name: Fetch permissioned node validator
  fetch:
    src: /opt/besu-validator/tmp/permissions_config.toml
    dest: "{{ role_path }}/files/"
    flat: yes
  when: validator|bool

- name: copy permissioned nodes to node validator
  copy:
    src: "{{ role_path }}/files/permissions_config.toml"
    dest: /opt/besu-validator/data/permissions_config.toml
    mode: 0755

#- name: copy static nodes to node validator
#  copy:
#      src: "{{ role_path }}/files/static-nodes.json"
#      dest: /opt/besu-validator/data/static-nodes.json
#      mode: 0755

- name: copy address to first validator node
  copy:
    src: "{{ role_path }}/files/UTC--2017-09-20T08-43-59.003454005Z--58b8527743f89389b754c63489262fdfc9ba9db6"
    dest: /opt/besu-validator/data/keystore/UTC--2017-09-20T08-43-59.003454005Z--58b8527743f89389b754c63489262fdfc9ba9db6
    mode: 0700
  when: first_node|bool

- name: Generate shell script to execute pantheon service
  template:
    src: "startpantheon.j2"
    dest: "/opt/besu-validator/start-pantheon.sh"
    mode: 0775
    force: yes

- name: Generate Besu configuration file
  template:
    src: "pantheon-config.j2"
    dest: "/opt/besu-validator/config.toml"
    mode: 0775

- name: Copy service file to systemd
  copy:
    src: "{{ role_path }}/files/pantheon.service"
    dest: /lib/systemd/system/pantheon.service
    mode: 0775

- name: Copy Log configuration file to besu
  copy:
    src: "{{ role_path }}/files/log.xml"
    dest: "/opt/besu-validator/log.xml"
    mode: 0775

- name: Enable service pantheon
  service:
    name: pantheon
    enabled: yes
